<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f4f4f4;
        }
        .settings-container {
            text-align: center;
        }
        .btn {
            display: block;
            width: 150px;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background-color: #007bff;
            color: white;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin: 10px auto;
        }
        .btn:hover {
            background-color: #0056b3;
        }
        .btn-success {
            background-color: #28a745; /* Green color */
            color: #fff; /* White text */
            border: 1px solid #28a745; /* Green border */
            padding: 0.5rem 1rem; /* Padding */
            font-size: 1rem; /* Font size */
            border-radius: 0.25rem; /* Rounded corners */
            text-align: center; /* Center text */
            text-decoration: none; /* Remove underline from links */
            display: inline-block; /* Display as inline block */
            cursor: pointer; /* Pointer cursor on hover */
            transition: background-color 0.2s, border-color 0.2s; /* Smooth transition */
        }

        .btn-success:hover {
            background-color: #218838; /* Darker green on hover */
            border-color: #1e7e34; /* Darker green border on hover */
        }

        .btn-danger {
            background-color: #dc3545; /* Red color */
            color: #fff; /* White text */
            border: 1px solid #dc3545; /* Red border */
            padding: 0.5rem 1rem; /* Padding */
            font-size: 1rem; /* Font size */
            border-radius: 0.25rem; /* Rounded corners */
            text-align: center; /* Center text */
            text-decoration: none; /* Remove underline from links */
            display: inline-block; /* Display as inline block */
            cursor: pointer; /* Pointer cursor on hover */
            transition: background-color 0.2s, border-color 0.2s; /* Smooth transition */
        }

        .btn-danger:hover {
            background-color: #c82333; /* Darker red on hover */
            border-color: #bd2130; /* Darker red border on hover */
        }

        .btn-warning {
            background-color: #ffc107; /* Yellow color */
            color: #212529; /* Dark text */
            border: 1px solid #ffc107; /* Yellow border */
            padding: 0.5rem 1rem; /* Padding */
            font-size: 1rem; /* Font size */
            border-radius: 0.25rem; /* Rounded corners */
            text-align: center; /* Center text */
            text-decoration: none; /* Remove underline from links */
            display: inline-block; /* Display as inline block */
            cursor: pointer; /* Pointer cursor on hover */
            transition: background-color 0.2s, border-color 0.2s; /* Smooth transition */
        }

        .btn-warning:hover {
            background-color: #e0a800; /* Darker yellow on hover */
            border-color: #d39e00; /* Darker yellow border on hover */
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <div class="settings-container">
        <h1>Settings Page</h1>
        <button class="btn btn-success" id="exportBtn">Export</button>
        <button class="btn btn-warning" id="resetBtn">Reset</button>
        <button class="btn btn-danger" id="stopGameBtn">Stop</button>
        <button class="btn btn-danger hidden" id="returnHomeBtn">Return Home</button>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        document.getElementById('exportBtn').addEventListener('click', () => {
            fetch('/export')
                .then(response => response.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'user_data.csv';
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                })
                .catch(error => console.error('Error exporting data:', error));
        });

        document.getElementById('resetBtn').addEventListener('click', () => {
            const confirmationKey = prompt('Enter the confirmation key to reset the database:');
            if (confirmationKey === '12345') {
                fetch('/reset', { method: 'POST' })
                    .then(response => response.json())
                    .then(result => {
                        if (result.success) {
                            alert('Database has been reset successfully.');
                        } else {
                            alert('Error resetting database.');
                        }
                    })
                    .catch(error => console.error('Error resetting database:', error));
            } else {
                alert('Incorrect key or action canceled.');
            }
        });

        // Handle stop game button click
        stopGameBtn.addEventListener('click', () => {
            stopGameBtn.disabled = true;
            stopGameBtn.classList.add('hidden');
            returnHomeBtn.classList.remove('hidden');
            //socket.emit('result', 's');
        });

        // Handle return home button click
        returnHomeBtn.addEventListener('click', () => {
            socket.emit('result', 'h');
            location.reload();
        });
    </script>
</body>
</html>